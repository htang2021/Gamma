[{"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\index.js":"1","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\reportWebVitals.js":"2","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\App.js":"3","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\Footer\\Footer.js":"4","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\pages\\Home\\Home.js":"5","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\pages\\SignUp\\SignUp.js":"6","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\pages\\SignIn\\SignIn.js":"7","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\Footer\\FooterStyles.js":"8","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\globalStyles\\img.js":"9","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\globalStyles\\text.js":"10","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\Navbar\\Navbar.js":"11","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\globalStyles\\aligment.js":"12","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\Modal\\Modal.js":"13","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\globalStyles\\buttons.js":"14","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\globalStyles\\form.js":"15","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\Chat\\ChatWindow.js":"16","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\ulit\\auth\\authClient.js":"17","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\ulit\\mutation\\loginMutation.js":"18","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\Navbar\\NavbarStyles.js":"19","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\Modal\\ModalStyles.js":"20","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\SearchModal\\SearchModal.js":"21","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\Chat\\ChatWindowStyles.js":"22","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\FriendList\\FriendList.js":"23","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\SearchModal\\SearchModalStyles.js":"24","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\FriendList\\FriendListStyles.js":"25"},{"size":517,"mtime":1625794609894,"results":"26","hashOfConfig":"27"},{"size":375,"mtime":1625794609899,"results":"28","hashOfConfig":"27"},{"size":1527,"mtime":1626165042698,"results":"29","hashOfConfig":"27"},{"size":814,"mtime":1625794609883,"results":"30","hashOfConfig":"27"},{"size":588,"mtime":1626322519338,"results":"31","hashOfConfig":"27"},{"size":8612,"mtime":1626163046798,"results":"32","hashOfConfig":"27"},{"size":5379,"mtime":1626164556240,"results":"33","hashOfConfig":"27"},{"size":1158,"mtime":1625794609883,"results":"34","hashOfConfig":"27"},{"size":767,"mtime":1625794609892,"results":"35","hashOfConfig":"27"},{"size":1130,"mtime":1625794609893,"results":"36","hashOfConfig":"27"},{"size":1064,"mtime":1626227683509,"results":"37","hashOfConfig":"27"},{"size":1445,"mtime":1625794609890,"results":"38","hashOfConfig":"27"},{"size":1302,"mtime":1625794609885,"results":"39","hashOfConfig":"27"},{"size":342,"mtime":1625794609891,"results":"40","hashOfConfig":"27"},{"size":1235,"mtime":1625794609891,"results":"41","hashOfConfig":"27"},{"size":4224,"mtime":1626227553462,"results":"42","hashOfConfig":"27"},{"size":1330,"mtime":1626163046801,"results":"43","hashOfConfig":"27"},{"size":661,"mtime":1625794609901,"results":"44","hashOfConfig":"27"},{"size":903,"mtime":1625794609887,"results":"45","hashOfConfig":"27"},{"size":688,"mtime":1625794609885,"results":"46","hashOfConfig":"27"},{"size":1069,"mtime":1625794609887,"results":"47","hashOfConfig":"27"},{"size":1777,"mtime":1626225699126,"results":"48","hashOfConfig":"27"},{"size":1391,"mtime":1626163046783,"results":"49","hashOfConfig":"27"},{"size":1694,"mtime":1625794609888,"results":"50","hashOfConfig":"27"},{"size":1627,"mtime":1625794609884,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"18152il",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\index.js",[],["107","108"],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\reportWebVitals.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\App.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\pages\\Home\\Home.js",["109"],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\pages\\SignUp\\SignUp.js",["110","111","112"],"\r\n// apollo client and mutations\r\nimport { useMutation } from '@apollo/client';\r\n\r\n// Sign up mutation \r\nimport { SIGN_UP_USER } from '../../ulit/mutation/loginMutation';\r\nimport authClient from '../../ulit/auth/authClient';\r\n\r\n// styles\r\n\r\nimport { Row, Column1, Container, Wrapper, Column2 } from \"../../globalStyles/aligment\";\r\nimport { Title, Text  } from '../../globalStyles/text';\r\n\r\nimport signUpSVG from '../../assets/signUpSVG.svg';\r\nimport { Img, ImgWrapper } from \"../../globalStyles/img\";\r\nimport { Form, Input, InputContainer, SignContainer } from \"../../globalStyles/form\";\r\nimport { useState } from 'react';\r\nimport { Button, ButtonWrapper } from '../../globalStyles/buttons';\r\nimport Modal from '../../components/Modal/Modal';\r\n\r\n\r\n// hooks\r\n\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n// add the \r\n\r\nconst SignUp = ({  }) => {\r\n\r\n    const history = useHistory();\r\n\r\n    // mutation\r\n    const [addUser, { error }] = useMutation(SIGN_UP_USER);\r\n\r\n    // state object of the sign up form\r\n    const [formData, setFormData] = useState({ email: '', username: '', password: '' });\r\n\r\n    // set the state's object property with a function copy the current state\r\n    // replace it with the event on the UI and set state to that property\r\n\r\n    const updateStateUIProps = event => {\r\n        // destructure the name and value from the input element\r\n        const { name, value } = event.target\r\n        // update the new copy of the state with new properties\r\n        setFormData({ ...formData, [name]: value})\r\n    }\r\n\r\n    // error modal here\r\n\r\n    const [modal, setModal] = useState(false)\r\n    // flips bool\r\n    const openModal = () => setModal(prevState => !prevState)\r\n\r\n    // sets the modal's object state, initially the state will be a collection\r\n    // empty strings and update to whatever we update it \r\n    const [modalData, setModalData] = useState({ error: '', message1: '', message2: '', callback: '' }) \r\n\r\n    // function to set form's input value on onChange and send a sign up request mutation\r\n    const requestToSignUp = async event => {\r\n        event.preventDefault();\r\n\r\n        let condition = /^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$/;\r\n        if(!formData.username.match(condition) || !formData.password.match(condition)) {\r\n            setModalData({ error: 'Must Contain Numbers and Letters', message1: 'Error Made!', message2: 'Please Try Again', closeModal: openModal })\r\n            openModal()\r\n            return false;\r\n        };\r\n\r\n\r\n        try {\r\n            // destructure the data from the state into the addUser's query variables\r\n            const { data } = await addUser({\r\n                // send a new copy of the state's object props\r\n                variables: { ...formData }\r\n            });\r\n            // if successful on add the user login them in using the auth class object\r\n            // witht the new user's token as the arg\r\n            console.log('success');\r\n            authClient.login(data.addUser.token);\r\n            history.push('/home')\r\n        } catch (err) {\r\n            setModalData({ error: err.message, message1: '', message2: '', closeModal: openModal })\r\n            openModal()\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n        { modal && <Modal {...modalData} /> }\r\n        <Container>\r\n            <Wrapper>\r\n                <Row>\r\n                    <Column1>\r\n                        <Form onSubmit={requestToSignUp}>\r\n                            <Row>\r\n                                <Column1>\r\n                                    <Title>\r\n                                        Sign Up Today!\r\n                                    </Title>\r\n                                        <Row> \r\n                                            <Column1>\r\n                                                <InputContainer>\r\n                                                    <Text>\r\n                                                        Email\r\n                                                    </Text>\r\n                                                    <Input \r\n                                                        type='cc-csc'\r\n                                                        placeholder='Enter email'\r\n                                                        name='email'\r\n                                                        onChange={updateStateUIProps}\r\n                                                        value={formData.email}\r\n                                                        autocomplete=\"on\"\r\n                                                        required\r\n                                                    />\r\n                                                </InputContainer>\r\n                                                <InputContainer>\r\n                                                    <Text>\r\n                                                        Username\r\n                                                    </Text>\r\n                                                    <Input \r\n                                                        type='cc-csc'\r\n                                                        placeholder='Enter username'\r\n                                                        name='username'\r\n                                                        onChange={updateStateUIProps}\r\n                                                        value={formData.username}\r\n                                                        autocomplete=\"on\"\r\n                                                        required\r\n                                                    />\r\n                                                </InputContainer>\r\n                                            </Column1>\r\n                                            <Column2>\r\n                                                <InputContainer>\r\n                                                    <Text>\r\n                                                        Password\r\n                                                    </Text>\r\n                                                    <Input \r\n                                                        type='cc-csc'\r\n                                                        placeholder='Enter password'\r\n                                                        name='password'\r\n                                                        onChange={updateStateUIProps}\r\n                                                        value={formData.password}\r\n                                                        autocomplete=\"on\"\r\n                                                        required\r\n                                                    />\r\n                                                </InputContainer>\r\n                                                <InputContainer>\r\n                                                    <Text>\r\n                                                        Confirm Password\r\n                                                    </Text>\r\n                                                    <Input \r\n                                                        type='cc-csc'\r\n                                                        placeholder='Enter password'\r\n                                                        autocomplete=\"on\"\r\n                                                        required \r\n                                                    />\r\n                                                </InputContainer>\r\n                                            </Column2>\r\n                                            <ButtonWrapper>\r\n                                                <Button type=\"submit\">\r\n                                                    Button Here\r\n                                                </Button>\r\n                                            </ButtonWrapper>\r\n                                        </Row>\r\n                                </Column1>\r\n                            </Row>\r\n                        </Form>\r\n                    </Column1>\r\n                    <Column2>\r\n                        <ImgWrapper>\r\n                            <Img src={signUpSVG} />\r\n                        </ImgWrapper>\r\n\r\n                        Have an Account? <br/>\r\n                        <Link to=\"/signin\">\r\n                            Sign In Here!\r\n                        </Link>\r\n                    </Column2>\r\n                </Row>\r\n            </Wrapper>\r\n        </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp;","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\pages\\SignIn\\SignIn.js",["113"],"\r\n// apollo client and mutations\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { LOGIN_USER } from '../../ulit/mutation/loginMutation';\r\n\r\n\r\n\r\n// Styles and Assest \r\n\r\nimport { Column1, Column2, Container, Row, Wrapper } from \"../../globalStyles/aligment\";\r\nimport { Img, ImgWrapper } from \"../../globalStyles/img\";\r\nimport { Text, Title } from \"../../globalStyles/text\";\r\n\r\nimport signUpSVG from '../../assets/signUpSVG.svg';\r\nimport { Form, Input, InputContainer, SignContainer } from \"../../globalStyles/form\";\r\nimport { Button, ButtonWrapper } from '../../globalStyles/buttons';\r\n\r\n// hooks\r\n\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport authClient from '../../ulit/auth/authClient';\r\n\r\nconst SignIn = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    // update the state's properties in this state object\r\n    const [userFormData, setUserFormData] = useState({ username: '', password: '' });\r\n\r\n    const [login, { error }] = useMutation(LOGIN_USER);\r\n\r\n    // set the state's object property with a function copy the current state\r\n    // replace it with the event on the UI and set state to that property\r\n\r\n    const updateStateUIProps = event => {\r\n        // destructure the name and value from the input element\r\n        const { name, value } = event.target\r\n        // update the new copy of the state with new properties\r\n        setUserFormData({ ...userFormData, [name]: value})\r\n    }\r\n\r\n    const requestToSignIn = async event => {\r\n        event.preventDefault();\r\n    \r\n        try {\r\n            const { data } = await login({\r\n              variables: { ...userFormData } \r\n            })\r\n      \r\n            authClient.login(data.login.token);\r\n            history.push('/home');\r\n        } catch (err) {\r\n            console.log('?')\r\n            // we ccan use this in development but it\r\n            // it shouldn't be used in production for the client to see\r\n            console.error(err.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n           <SignContainer>\r\n                <Container>\r\n                    <Wrapper>\r\n                        <Row>\r\n                            <Column1>\r\n                                <Form onSubmit={requestToSignIn}>\r\n                                    <Title>\r\n                                        Welcome Back\r\n                                    </Title>\r\n                                        <Row> \r\n                                            <Column1>\r\n                                                <InputContainer>\r\n                                                    <Text>\r\n                                                        Enter Your Username\r\n                                                    </Text>\r\n                                                    <Input \r\n                                                        autocomplete=\"on\"\r\n                                                        placeholder='Enter username'\r\n                                                        name='username'\r\n                                                        onChange={updateStateUIProps}\r\n                                                        value={userFormData.username}\r\n                                                        required\r\n                                                    />\r\n                                                </InputContainer>\r\n                                                <InputContainer>\r\n                                                    <Text>\r\n                                                        Enter Your Password\r\n                                                    </Text>\r\n                                                    <Input \r\n                                                        type='password'\r\n                                                        placeholder='Enter password'\r\n                                                        name='password'\r\n                                                        onChange={updateStateUIProps}\r\n                                                        value={userFormData.password}\r\n                                                        autocomplete=\"on\"\r\n                                                        required\r\n                                                    />\r\n                                                </InputContainer>\r\n                                            </Column1>\r\n                                        </Row>\r\n                                        <ButtonWrapper>\r\n                                            <Button onClick={requestToSignIn} type=\"submit\">\r\n                                                Sign In!\r\n                                            </Button>\r\n                                        </ButtonWrapper>\r\n                                    </Form>\r\n                                </Column1>\r\n                                <Column2>\r\n                                    <ImgWrapper>\r\n                                        <Img src={signUpSVG} />\r\n                                    </ImgWrapper>\r\n                                </Column2>\r\n                            </Row>\r\n                        </Wrapper>\r\n                    </Container>\r\n           </SignContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignIn;","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\Footer\\FooterStyles.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\globalStyles\\img.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\globalStyles\\text.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\Navbar\\Navbar.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\globalStyles\\aligment.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\Modal\\Modal.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\globalStyles\\buttons.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\globalStyles\\form.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\Chat\\ChatWindow.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\ulit\\auth\\authClient.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\ulit\\mutation\\loginMutation.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\Navbar\\NavbarStyles.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\Modal\\ModalStyles.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\SearchModal\\SearchModal.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\Chat\\ChatWindowStyles.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\FriendList\\FriendList.js",["114","115","116","117"],"\r\nimport { useState } from 'react';\r\n\r\n// styles\r\n\r\nimport {\r\n    OuterContainer,\r\n    TitleContainer,\r\n    Title,\r\n    InviteBtn,\r\n    ListContainer,\r\n    FriendRow,\r\n    FriendName,\r\n    RemoveBtn\r\n} from './FriendListStyles';\r\n\r\nconst FriendList = ({friendsOfUser}) => {\r\n\r\n    const [chatData, setChatData] = useState({})\r\n\r\n    // if chat btn is clicked open the chat and send the props of the \r\n    // to that component\r\n\r\n    return (\r\n        <OuterContainer>\r\n            <TitleContainer>\r\n                <Title>Friends List</Title>\r\n            </TitleContainer>\r\n            <ListContainer>\r\n                {/* {friends} */}\r\n\r\n                {friendsOfUser.map(friendOfUser => <FriendRow>\r\n                    <FriendName>{friendOfUser}</FriendName>\r\n                </FriendRow>)}\r\n\r\n            </ListContainer>\r\n        </OuterContainer>\r\n    )\r\n}\r\n\r\nexport default FriendList;\r\n\r\n\r\n/* \r\n\r\n<FriendRow>\r\n                    <FriendName>username-1</FriendName>\r\n                    <RemoveBtn>Chat</RemoveBtn>\r\n                </FriendRow>\r\n                <FriendRow>\r\n                    <FriendName>username-2</FriendName>\r\n                    <RemoveBtn>Chat</RemoveBtn>\r\n                </FriendRow>\r\n                <FriendRow>\r\n                    <FriendName>username-3</FriendName>\r\n                    <RemoveBtn>Chat</RemoveBtn>\r\n                </FriendRow>\r\n\r\n*/",["118","119"],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\SearchModal\\SearchModalStyles.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\FriendList\\FriendListStyles.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":17,"column":7,"nodeType":"126","messageId":"127","endLine":17,"endColumn":12},{"ruleId":"124","severity":1,"message":"128","line":16,"column":39,"nodeType":"126","messageId":"127","endLine":16,"endColumn":52},{"ruleId":"129","severity":1,"message":"130","line":31,"column":17,"nodeType":"131","messageId":"132","endLine":31,"endColumn":21},{"ruleId":"124","severity":1,"message":"133","line":36,"column":23,"nodeType":"126","messageId":"127","endLine":36,"endColumn":28},{"ruleId":"124","severity":1,"message":"133","line":32,"column":21,"nodeType":"126","messageId":"127","endLine":32,"endColumn":26},{"ruleId":"124","severity":1,"message":"134","line":10,"column":5,"nodeType":"126","messageId":"127","endLine":10,"endColumn":14},{"ruleId":"124","severity":1,"message":"135","line":14,"column":5,"nodeType":"126","messageId":"127","endLine":14,"endColumn":14},{"ruleId":"124","severity":1,"message":"136","line":19,"column":12,"nodeType":"126","messageId":"127","endLine":19,"endColumn":20},{"ruleId":"124","severity":1,"message":"137","line":19,"column":22,"nodeType":"126","messageId":"127","endLine":19,"endColumn":33},{"ruleId":"120","replacedBy":"138"},{"ruleId":"122","replacedBy":"139"},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","'SignContainer' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'error' is assigned a value but never used.","'InviteBtn' is defined but never used.","'RemoveBtn' is defined but never used.","'chatData' is assigned a value but never used.","'setChatData' is assigned a value but never used.",["140"],["141"],"no-global-assign","no-unsafe-negation"]