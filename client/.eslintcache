[{"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\index.js":"1","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\reportWebVitals.js":"2","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\App.js":"3","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\Footer\\Footer.js":"4","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\pages\\SignIn\\SignIn.js":"5","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\pages\\Home\\Home.js":"6","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\pages\\SignUp\\SignUp.js":"7","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\Footer\\FooterStyles.js":"8","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\globalStyles\\aligment.js":"9","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\globalStyles\\img.js":"10","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\globalStyles\\form.js":"11","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\globalStyles\\buttons.js":"12","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\globalStyles\\text.js":"13","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\Modal\\Modal.js":"14","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\Chat\\ChatWindow.js":"15","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\ulit\\auth\\authClient.js":"16","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\ulit\\mutation\\loginMutation.js":"17","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\Navbar\\Navbar.js":"18","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\Modal\\ModalStyles.js":"19","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\Chat\\ChatWindowStyles.js":"20","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\FriendList\\FriendList.js":"21","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\Navbar\\NavbarStyles.js":"22","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\SearchModal\\SearchModal.js":"23","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\FriendList\\FriendListStyles.js":"24","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\SearchModal\\SearchModalStyles.js":"25"},{"size":517,"mtime":1625191382033,"results":"26","hashOfConfig":"27"},{"size":375,"mtime":1625030382343,"results":"28","hashOfConfig":"27"},{"size":1525,"mtime":1625727405533,"results":"29","hashOfConfig":"27"},{"size":820,"mtime":1625624940250,"results":"30","hashOfConfig":"27"},{"size":5253,"mtime":1625641077630,"results":"31","hashOfConfig":"27"},{"size":428,"mtime":1625727405539,"results":"32","hashOfConfig":"27"},{"size":8610,"mtime":1625727187830,"results":"33","hashOfConfig":"27"},{"size":675,"mtime":1625682957435,"results":"34","hashOfConfig":"27"},{"size":1445,"mtime":1625624940254,"results":"35","hashOfConfig":"27"},{"size":767,"mtime":1625624940256,"results":"36","hashOfConfig":"27"},{"size":1235,"mtime":1625624940255,"results":"37","hashOfConfig":"27"},{"size":342,"mtime":1625624940254,"results":"38","hashOfConfig":"27"},{"size":1130,"mtime":1625624940256,"results":"39","hashOfConfig":"27"},{"size":1302,"mtime":1625727190206,"results":"40","hashOfConfig":"27"},{"size":1139,"mtime":1625727405535,"results":"41","hashOfConfig":"27"},{"size":415,"mtime":1625685673183,"results":"42","hashOfConfig":"27"},{"size":661,"mtime":1625628556814,"results":"43","hashOfConfig":"27"},{"size":1058,"mtime":1625761804391,"results":"44","hashOfConfig":"27"},{"size":688,"mtime":1625682511214,"results":"45","hashOfConfig":"27"},{"size":1553,"mtime":1625727757523,"results":"46","hashOfConfig":"27"},{"size":1055,"mtime":1625727405536,"results":"47","hashOfConfig":"27"},{"size":903,"mtime":1625624940253,"results":"48","hashOfConfig":"27"},{"size":674,"mtime":1625761823402,"results":"49","hashOfConfig":"27"},{"size":1627,"mtime":1625624940252,"results":"50","hashOfConfig":"27"},{"size":1285,"mtime":1625761511968,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"18152il",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\index.js",[],["107","108"],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\reportWebVitals.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\App.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\pages\\SignIn\\SignIn.js",["109"],"\r\n// apollo client and mutations\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { LOGIN_USER } from '../../ulit/mutation/loginMutation';\r\nimport AuthClient from '../../ulit/auth/authClient';\r\n\r\n\r\n// Styles and Assest \r\n\r\nimport { Column1, Column2, Container, Row, Wrapper } from \"../../globalStyles/aligment\";\r\nimport { Img, ImgWrapper } from \"../../globalStyles/img\";\r\nimport { Text, Title } from \"../../globalStyles/text\";\r\n\r\nimport signUpSVG from '../../assets/signUpSVG.svg';\r\nimport { Form, Input, InputContainer, SignContainer } from \"../../globalStyles/form\";\r\nimport { Button, ButtonWrapper } from '../../globalStyles/buttons';\r\n\r\n// hooks\r\n\r\nimport { useState } from 'react';\r\n\r\nconst SignIn = () => {\r\n\r\n    // update the state's properties in this state object\r\n    const [userFormData, setUserFormData] = useState({ username: '', password: '' });\r\n\r\n    const [login, { error }] = useMutation(LOGIN_USER);\r\n\r\n    // set the state's object property with a function copy the current state\r\n    // replace it with the event on the UI and set state to that property\r\n\r\n    const updateStateUIProps = event => {\r\n        // destructure the name and value from the input element\r\n        const { name, value } = event.target\r\n        // update the new copy of the state with new properties\r\n        setUserFormData({ ...userFormData, [name]: value})\r\n    }\r\n\r\n    const requestToSignIn = async event => {\r\n        event.preventDefault();\r\n    \r\n        try {\r\n            const { data } = await login({\r\n              variables: { ...userFormData } \r\n            })\r\n      \r\n            AuthClient.login(data.login.token)\r\n        } catch (err) {\r\n            console.log('?')\r\n            // we ccan use this in development but it\r\n            // it shouldn't be used in production for the client to see\r\n            console.error(err.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n           <SignContainer>\r\n                <Container>\r\n                    <Wrapper>\r\n                        <Row>\r\n                            <Column1>\r\n                                <Form onSubmit={requestToSignIn}>\r\n                                    <Title>\r\n                                        Welcome Back\r\n                                    </Title>\r\n                                        <Row> \r\n                                            <Column1>\r\n                                                <InputContainer>\r\n                                                    <Text>\r\n                                                        Enter Your Username\r\n                                                    </Text>\r\n                                                    <Input \r\n                                                        autocomplete=\"on\"\r\n                                                        placeholder='Enter username'\r\n                                                        name='username'\r\n                                                        onChange={updateStateUIProps}\r\n                                                        value={userFormData.username}\r\n                                                        required\r\n                                                    />\r\n                                                </InputContainer>\r\n                                                <InputContainer>\r\n                                                    <Text>\r\n                                                        Enter Your Password\r\n                                                    </Text>\r\n                                                    <Input \r\n                                                        type='cc-csc'\r\n                                                        placeholder='Enter password'\r\n                                                        name='password'\r\n                                                        onChange={updateStateUIProps}\r\n                                                        value={userFormData.password}\r\n                                                        autocomplete=\"on\"\r\n                                                        required\r\n                                                    />\r\n                                                </InputContainer>\r\n                                            </Column1>\r\n                                        </Row>\r\n                                        <ButtonWrapper>\r\n                                            <Button onClick={requestToSignIn} type=\"submit\">\r\n                                                Sign In!\r\n                                            </Button>\r\n                                        </ButtonWrapper>\r\n                                    </Form>\r\n                                </Column1>\r\n                                <Column2>\r\n                                    <ImgWrapper>\r\n                                        <Img src={signUpSVG} />\r\n                                    </ImgWrapper>\r\n                                </Column2>\r\n                            </Row>\r\n                        </Wrapper>\r\n                    </Container>\r\n           </SignContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignIn;","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\pages\\Home\\Home.js",["110","111","112"],"\r\nimport Modal from '../../components/Modal/Modal';\r\nimport Navbar from '../../components/Navbar/Navbar'\r\nimport { Container } from '../../globalStyles/aligment';\r\nimport { Text } from '../../globalStyles/text';\r\nimport ChatWindow from '../../components/Chat/ChatWindow';\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <ChatWindow />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\pages\\SignUp\\SignUp.js",["113","114","115","116"],"\r\n// apollo client and mutations\r\nimport { useMutation } from '@apollo/client';\r\n\r\n// Sign up mutation \r\nimport { SIGN_UP_USER } from '../../ulit/mutation/loginMutation';\r\nimport AuthClient from '../../ulit/auth/authClient';\r\n\r\n// styles\r\n\r\nimport { Row, Column1, Container, Wrapper, Column2 } from \"../../globalStyles/aligment\";\r\nimport { Title, Text  } from '../../globalStyles/text';\r\n\r\nimport signUpSVG from '../../assets/signUpSVG.svg';\r\nimport { Img, ImgWrapper } from \"../../globalStyles/img\";\r\nimport { Form, Input, InputContainer, SignContainer } from \"../../globalStyles/form\";\r\nimport { useState } from 'react';\r\nimport { Button, ButtonWrapper } from '../../globalStyles/buttons';\r\nimport Modal from '../../components/Modal/Modal';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n// hooks\r\n\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n\r\n\r\n// add the \r\n\r\nconst SignUp = ({  }) => {\r\n\r\n    let location = useLocation()\r\n\r\n    // mutation\r\n    const [addUser, { error }] = useMutation(SIGN_UP_USER);\r\n\r\n    // state object of the sign up form\r\n    const [formData, setFormData] = useState({ email: '', username: '', password: '' });\r\n\r\n    // set the state's object property with a function copy the current state\r\n    // replace it with the event on the UI and set state to that property\r\n\r\n    const updateStateUIProps = event => {\r\n        // destructure the name and value from the input element\r\n        const { name, value } = event.target\r\n        // update the new copy of the state with new properties\r\n        setFormData({ ...formData, [name]: value})\r\n    }\r\n\r\n    // error modal here\r\n\r\n    const [modal, setModal] = useState(false)\r\n    // flips bool\r\n    const openModal = () => setModal(prevState => !prevState)\r\n\r\n    // sets the modal's object state, initially the state will be a collection\r\n    // empty strings and update to whatever we update it \r\n    const [modalData, setModalData] = useState({ error: '', message1: '', message2: '', callback: '' }) \r\n\r\n    // function to set form's input value on onChange and send a sign up request mutation\r\n    const requestToSignUp = async event => {\r\n        event.preventDefault();\r\n\r\n        let condition = /^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$/;\r\n        if(!formData.username.match(condition) || !formData.password.match(condition)) {\r\n            setModalData({ error: 'Must Contain Numbers and Letters', message1: 'Error Made!', message2: 'Please Try Again', closeModal: openModal })\r\n            openModal()\r\n            return false;\r\n        };\r\n\r\n\r\n        try {\r\n            // destructure the data from the state into the addUser's query variables\r\n            const { data } = await addUser({\r\n                // send a new copy of the state's object props\r\n                variables: { ...formData }\r\n            });\r\n            // if successful on add the user login them in using the auth class object\r\n            // witht the new user's token as the arg\r\n            console.log('success');\r\n            AuthClient.login(data.addUser.token)\r\n        } catch (err) {\r\n            setModalData({ error: err.message, message1: '', message2: '', closeModal: openModal })\r\n            openModal()\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n        { modal && <Modal {...modalData} /> }\r\n        <Container>\r\n            <Wrapper>\r\n                <Row>\r\n                    <Column1>\r\n                        <Form onSubmit={requestToSignUp}>\r\n                            <Row>\r\n                                <Column1>\r\n                                    <Title>\r\n                                        Sign Up Today!\r\n                                    </Title>\r\n                                        <Row> \r\n                                            <Column1>\r\n                                                <InputContainer>\r\n                                                    <Text>\r\n                                                        Email\r\n                                                    </Text>\r\n                                                    <Input \r\n                                                        type='cc-csc'\r\n                                                        placeholder='Enter email'\r\n                                                        name='email'\r\n                                                        onChange={updateStateUIProps}\r\n                                                        value={formData.email}\r\n                                                        autocomplete=\"on\"\r\n                                                        required\r\n                                                    />\r\n                                                </InputContainer>\r\n                                                <InputContainer>\r\n                                                    <Text>\r\n                                                        Username\r\n                                                    </Text>\r\n                                                    <Input \r\n                                                        type='cc-csc'\r\n                                                        placeholder='Enter username'\r\n                                                        name='username'\r\n                                                        onChange={updateStateUIProps}\r\n                                                        value={formData.username}\r\n                                                        autocomplete=\"on\"\r\n                                                        required\r\n                                                    />\r\n                                                </InputContainer>\r\n                                            </Column1>\r\n                                            <Column2>\r\n                                                <InputContainer>\r\n                                                    <Text>\r\n                                                        Password\r\n                                                    </Text>\r\n                                                    <Input \r\n                                                        type='cc-csc'\r\n                                                        placeholder='Enter password'\r\n                                                        name='password'\r\n                                                        onChange={updateStateUIProps}\r\n                                                        value={formData.password}\r\n                                                        autocomplete=\"on\"\r\n                                                        required\r\n                                                    />\r\n                                                </InputContainer>\r\n                                                <InputContainer>\r\n                                                    <Text>\r\n                                                        Confirm Password\r\n                                                    </Text>\r\n                                                    <Input \r\n                                                        type='cc-csc'\r\n                                                        placeholder='Enter password'\r\n                                                        autocomplete=\"on\"\r\n                                                        required \r\n                                                    />\r\n                                                </InputContainer>\r\n                                            </Column2>\r\n                                            <ButtonWrapper>\r\n                                                <Button type=\"submit\">\r\n                                                    Button Here\r\n                                                </Button>\r\n                                            </ButtonWrapper>\r\n                                        </Row>\r\n                                </Column1>\r\n                            </Row>\r\n                        </Form>\r\n                    </Column1>\r\n                    <Column2>\r\n                        <ImgWrapper>\r\n                            <Img src={signUpSVG} />\r\n                        </ImgWrapper>\r\n\r\n                        Have an Account? <br/>\r\n                        <Link to=\"/signin\">\r\n                            Sign In Here!\r\n                        </Link>\r\n                    </Column2>\r\n                </Row>\r\n            </Wrapper>\r\n        </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp;","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\Footer\\FooterStyles.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\globalStyles\\aligment.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\globalStyles\\img.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\globalStyles\\form.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\globalStyles\\buttons.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\globalStyles\\text.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\Modal\\Modal.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\Chat\\ChatWindow.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\ulit\\auth\\authClient.js",["117"],"\r\n// use this to decode a token and get the user's information out of it\r\nimport decode from 'jwt-decode';\r\n\r\n// create a new class to instantiate for a user\r\nclass AuthClient {\r\n\r\n    login(idToken) {\r\n        // Saves user token to localStorage\r\n        localStorage.setItem('id_token', idToken);\r\n        // go to home page\r\n        window.location.assign('/home');\r\n      }\r\n}\r\n\r\nexport default new AuthClient()","C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\ulit\\mutation\\loginMutation.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\Navbar\\Navbar.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\Modal\\ModalStyles.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\Chat\\ChatWindowStyles.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\FriendList\\FriendList.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\Navbar\\NavbarStyles.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\SearchModal\\SearchModal.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\FriendList\\FriendListStyles.js",[],"C:\\Users\\stude\\Desktop\\finalProject\\client\\src\\components\\SearchModal\\SearchModalStyles.js",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":28,"column":21,"nodeType":"124","messageId":"125","endLine":28,"endColumn":26},{"ruleId":"122","severity":1,"message":"126","line":2,"column":8,"nodeType":"124","messageId":"125","endLine":2,"endColumn":13},{"ruleId":"122","severity":1,"message":"127","line":4,"column":10,"nodeType":"124","messageId":"125","endLine":4,"endColumn":19},{"ruleId":"122","severity":1,"message":"128","line":5,"column":10,"nodeType":"124","messageId":"125","endLine":5,"endColumn":14},{"ruleId":"122","severity":1,"message":"129","line":16,"column":39,"nodeType":"124","messageId":"125","endLine":16,"endColumn":52},{"ruleId":"130","severity":1,"message":"131","line":31,"column":17,"nodeType":"132","messageId":"133","endLine":31,"endColumn":21},{"ruleId":"122","severity":1,"message":"134","line":33,"column":9,"nodeType":"124","messageId":"125","endLine":33,"endColumn":17},{"ruleId":"122","severity":1,"message":"123","line":36,"column":23,"nodeType":"124","messageId":"125","endLine":36,"endColumn":28},{"ruleId":"122","severity":1,"message":"135","line":3,"column":8,"nodeType":"124","messageId":"125","endLine":3,"endColumn":14},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'Modal' is defined but never used.","'Container' is defined but never used.","'Text' is defined but never used.","'SignContainer' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'location' is assigned a value but never used.","'decode' is defined but never used.","no-global-assign","no-unsafe-negation"]